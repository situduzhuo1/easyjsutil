{"version":3,"sources":["../src/index.js"],"names":["deepCopy","obj","cache","find","list","f","filter","Constructor","constructor","RegExp","Date","getTime","hit","c","original","copy","Array","isArray","push","Object","keys","forEach","key","StrCompare","a","b","localeCompare","urlEncode","url","encodeURIComponent","urlDecode","encodeurl","decodeURIComponent","StrLen","str","len","i","length","charCodeAt"],"mappings":";;;;;;;;AAAA;;;;;AAKA,SAASA,QAAT,CAAkBC,GAAlB,EAAmC;AAAA,MAAZC,KAAY,uEAAJ,EAAI;AAAE;AACnC,WAASC,IAAT,CAAcC,IAAd,EAAoBC,CAApB,EAAuB;AACrB,WAAOD,KAAKE,MAAL,CAAYD,CAAZ,EAAgB,CAAhB,CAAP;AACD;AACD;AACA;AACA;AACA;AACA,MAAME,cAAcN,IAAIO,WAAxB;AACA;AACA,MAAI,QAAOP,GAAP,yCAAOA,GAAP,OAAe,QAAnB,EAA6B;AAC3B,WAAOA,GAAP;AACD,GAFD,MAEO,IAAIM,gBAAgBE,MAApB,EAA4B;AACjC,WAAO,IAAIF,WAAJ,CAAgBN,GAAhB,CAAP;AACD,GAFM,MAEA,IAAIM,gBAAgBG,IAApB,EAA0B;AAC/B,WAAO,IAAIH,WAAJ,CAAgBN,IAAIU,OAAJ,EAAhB,CAAP;AACD;AACD;AACA,MAAMC,MAAMT,KAAKD,KAAL,EAAY,UAACW,CAAD;AAAA,WAAOA,EAAEC,QAAF,IAAcb,GAArB;AAAA,GAAZ,CAAZ;AACA,MAAIW,GAAJ,EAAS;AACP,WAAOA,IAAIG,IAAX;AACD;AACD,MAAMA,OAAOC,MAAMC,OAAN,CAAchB,GAAd,IAAqB,EAArB,GAA0B,EAAvC;AACA;AACA;AACAC,QAAMgB,IAAN,CAAW;AACTJ,cAAUb,GADD;AAETc;AAFS,GAAX;AAIAI,SAAOC,IAAP,CAAYnB,GAAZ,EAAiBoB,OAAjB,CAAyB,UAACC,GAAD,EAAS;AAChCP,SAAMO,GAAN,IAActB,SAASC,IAAKqB,GAAL,CAAT,EAAqBpB,KAArB,CAAd;AACD,GAFD;AAGA,SAAOa,IAAP;AACD;;AAED;;;;;AAKA,SAASQ,UAAT,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0B;AACxB,SAAOD,EAAEE,aAAF,CAAgBD,CAAhB,EAAmB,OAAnB,CAAP;AACD;;AAED;;;;AAIA,SAASE,SAAT,CAAmBC,GAAnB,EAAwB;AAAE;AACxB,SAAOC,mBAAmBD,GAAnB,CAAP;AACD;;AAED;;;;AAIA,SAASE,SAAT,CAAmBC,SAAnB,EAA8B;AAC5B,SAAOC,mBAAmBD,SAAnB,CAAP;AACD;;AAED;;;;AAIA,SAASE,MAAT,CAAgBC,GAAhB,EAAqB;AACnB,MAAIC,MAAM,CAAV;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,IAAIG,MAAxB,EAAgCD,GAAhC,EAAqC;AACnC,QAAIvB,IAAIqB,IAAII,UAAJ,CAAeF,CAAf,CAAR;AACA;AACA,QAAKvB,KAAK,MAAL,IAAeA,KAAK,MAArB,IAAiC,UAAUA,CAAV,IAAeA,KAAK,MAAzD,EAAkE;AAChEsB;AACD,KAFD,MAEO;AACLA,aAAO,CAAP;AACD;AACF;AACD,SAAOA,GAAP;AACD;;QAEOnC,Q,GAAAA,Q;QAAUuB,U,GAAAA,U;QAAYU,M,GAAAA,M;QAAQN,S,GAAAA,S;QAAWG,S,GAAAA,S","file":"index.js","sourcesContent":["/**\r\n * 深度拷贝 2020-10-22\r\n * @param {*} obj\r\n * @param {*} cache\r\n */\r\nfunction deepCopy(obj, cache = []) { // 深度拷贝\r\n  function find(list, f) {\r\n    return list.filter(f)[ 0 ];\r\n  }\r\n  // just return if obj is immutable value\r\n  // if (obj == null || typeof obj !== 'object') {\r\n  //   return obj;\r\n  // }\r\n  const Constructor = obj.constructor;\r\n  // typeof null的返回值为object，所以可以直接省略\r\n  if (typeof obj !== 'object') {\r\n    return obj;\r\n  } else if (Constructor === RegExp) {\r\n    return new Constructor(obj);\r\n  } else if (Constructor === Date) {\r\n    return new Constructor(obj.getTime());\r\n  }\r\n  // if obj is hit, it is in circular structure\r\n  const hit = find(cache, (c) => c.original == obj);\r\n  if (hit) {\r\n    return hit.copy;\r\n  }\r\n  const copy = Array.isArray(obj) ? [] : {};\r\n  // put the copy into cache at first\r\n  // because we want to refer it in recursive deepCopy\r\n  cache.push({\r\n    original: obj,\r\n    copy\r\n  });\r\n  Object.keys(obj).forEach((key) => {\r\n    copy[ key ] = deepCopy(obj[ key ], cache);\r\n  });\r\n  return copy;\r\n}\r\n\r\n/**\r\n * 字符串比较,兼容中文\r\n * @param {字符串a} a\r\n * @param {字符串b} b\r\n */\r\nfunction StrCompare(a, b) {\r\n  return a.localeCompare(b, 'zh-CN');\r\n}\r\n\r\n/**\r\n * URL转码\r\n * @param {url地址} url\r\n */\r\nfunction urlEncode(url) { // URL转义为字符串\r\n  return encodeURIComponent(url);\r\n}\r\n\r\n/**\r\n * url解码\r\n * @param {待解码url} encodeurl\r\n */\r\nfunction urlDecode(encodeurl) {\r\n  return decodeURIComponent(encodeurl);\r\n}\r\n\r\n/**\r\n * 字符串长度判断,中文算2个\r\n * @param {待判断长度的字符串} str\r\n */\r\nfunction StrLen(str) {\r\n  let len = 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    let c = str.charCodeAt(i);\r\n    // 单字节加1\r\n    if ((c >= 0x0001 && c <= 0x007e) || (0xff60 <= c && c <= 0xff9f)) {\r\n      len++;\r\n    } else {\r\n      len += 2;\r\n    }\r\n  }\r\n  return len;\r\n}\r\n\r\nexport {deepCopy, StrCompare, StrLen, urlEncode, urlDecode };\r\n"]}