{"version":3,"sources":["../../src/items/str.js"],"names":["Compare","a","b","localeCompare","getCharCodeLength","c","len","getLengthCN","str","i","length","charCodeAt","splitByLength","info","strlen","index","result","push"],"mappings":";;;;;AAAA;;;;;AAKA,SAASA,OAAT,CAAiBC,CAAjB,EAAoBC,CAApB,EAAuB;AACrB,SAAOD,EAAEE,aAAF,CAAgBD,CAAhB,EAAmB,OAAnB,CAAP;AACD;AACD;;;;AAIA,SAASE,iBAAT,CAA2BC,CAA3B,EAA6B;AAC3B,MAAIC,MAAM,CAAV;AACA,MAAKD,KAAK,MAAL,IAAeA,KAAK,MAArB,IAAiC,UAAUA,CAAV,IAAeA,KAAK,MAAzD,EAAkE;AAChEC;AACD,GAFD,MAEO;AACLA,WAAO,CAAP;AACD;AACD,SAAOA,GAAP;AACD;;AAED;;;;AAIA,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AACxB,MAAIF,MAAM,CAAV;AACA,OAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAID,IAAIE,MAAxB,EAAgCD,GAAhC,EAAqC;AACnC,QAAIJ,IAAIG,IAAIG,UAAJ,CAAeF,CAAf,CAAR;AACA;AACAH,WAAOF,kBAAkBC,CAAlB,CAAP;AACD;AACD,SAAOC,GAAP;AACD;;AAED;;;;AAIA,SAASM,aAAT,CAAuBJ,GAAvB,EAA2BE,MAA3B,EAAmC;AACjC,MAAIG,OAAO;AACTC,YAAO,CADE;AAETC,WAAM,CAFG;AAGTC,YAAO,CAAC,EAAD;AAHE,GAAX;AAKA,OAAK,IAAIP,IAAI,CAAb,EAAgBA,IAAID,IAAIE,MAAxB,EAAgCD,GAAhC,EAAqC;AACnC,QAAIJ,IAAIG,IAAIG,UAAJ,CAAeF,CAAf,CAAR;AACAI,SAAKC,MAAL,IAAaV,kBAAkBC,CAAlB,CAAb;AACA,QAAGQ,KAAKC,MAAL,IAAaJ,MAAhB,EAAuB;AACrBG,WAAKG,MAAL,CAAYH,KAAKE,KAAjB,KAAyBP,IAAIC,CAAJ,CAAzB;AACD,KAFD,MAEK;AACHI,WAAKE,KAAL;AACAF,WAAKC,MAAL,GAAaV,kBAAkBC,CAAlB,CAAb;AACAQ,WAAKG,MAAL,CAAYC,IAAZ,CAAiBT,IAAIC,CAAJ,CAAjB;AACD;AACF;AACD,SAAOI,KAAKG,MAAZ;AACD;;kBAEc,EAAEhB,gBAAF,EAAUO,wBAAV,EAAsBK,4BAAtB,E","file":"str.js","sourcesContent":["/**\r\n * 字符串比较,兼容中文\r\n * @param {字符串a} a\r\n * @param {字符串b} b\r\n */\r\nfunction Compare(a, b) {\r\n  return a.localeCompare(b, 'zh-CN');\r\n}\r\n/**\r\n * 获取字节长度\r\n * @param {字节编码} c \r\n */\r\nfunction getCharCodeLength(c){\r\n  let len = 0;\r\n  if ((c >= 0x0001 && c <= 0x007e) || (0xff60 <= c && c <= 0xff9f)) {\r\n    len++;\r\n  } else {\r\n    len += 2;\r\n  }\r\n  return len;\r\n}\r\n\r\n/**\r\n * 字符串长度判断,中文算2个\r\n * @param {待判断长度的字符串} str\r\n */\r\nfunction getLengthCN(str) {\r\n  let len = 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    let c = str.charCodeAt(i);\r\n    // 单字节加1\r\n    len += getCharCodeLength(c);\r\n  }\r\n  return len;\r\n}\r\n\r\n/**\r\n * 字符串长度判断,中文算2个\r\n * @param {待判断长度的字符串} str\r\n */\r\nfunction splitByLength(str,length) {\r\n  let info = {\r\n    strlen:0,\r\n    index:0,\r\n    result:['']\r\n  };\r\n  for (let i = 0; i < str.length; i++) {\r\n    let c = str.charCodeAt(i);\r\n    info.strlen+=getCharCodeLength(c);\r\n    if(info.strlen<=length){\r\n      info.result[info.index]+=str[i];\r\n    }else{\r\n      info.index++;\r\n      info.strlen =getCharCodeLength(c);\r\n      info.result.push(str[i]);\r\n    }\r\n  }\r\n  return info.result;\r\n}\r\n\r\nexport default { Compare,getLengthCN,splitByLength };\r\n"]}